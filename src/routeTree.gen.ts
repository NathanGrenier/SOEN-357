/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppSellImport } from './routes/_app/sell'
import { Route as AppCheckoutImport } from './routes/_app/checkout'
import { Route as AppCartImport } from './routes/_app/cart'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AppFootwearIndexImport } from './routes/_app/footwear/index'
import { Route as AppFootwearIdImport } from './routes/_app/footwear/$id'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSellRoute = AppSellImport.update({
  id: '/sell',
  path: '/sell',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCheckoutRoute = AppCheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCartRoute = AppCartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppFootwearIndexRoute = AppFootwearIndexImport.update({
  id: '/footwear/',
  path: '/footwear/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppFootwearIdRoute = AppFootwearIdImport.update({
  id: '/footwear/$id',
  path: '/footwear/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/cart': {
      id: '/_app/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof AppCartImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/checkout': {
      id: '/_app/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof AppCheckoutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/sell': {
      id: '/_app/sell'
      path: '/sell'
      fullPath: '/sell'
      preLoaderRoute: typeof AppSellImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/footwear/$id': {
      id: '/_app/footwear/$id'
      path: '/footwear/$id'
      fullPath: '/footwear/$id'
      preLoaderRoute: typeof AppFootwearIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/footwear/': {
      id: '/_app/footwear/'
      path: '/footwear'
      fullPath: '/footwear'
      preLoaderRoute: typeof AppFootwearIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppCartRoute: typeof AppCartRoute
  AppCheckoutRoute: typeof AppCheckoutRoute
  AppSellRoute: typeof AppSellRoute
  AppIndexRoute: typeof AppIndexRoute
  AppFootwearIdRoute: typeof AppFootwearIdRoute
  AppFootwearIndexRoute: typeof AppFootwearIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppCartRoute: AppCartRoute,
  AppCheckoutRoute: AppCheckoutRoute,
  AppSellRoute: AppSellRoute,
  AppIndexRoute: AppIndexRoute,
  AppFootwearIdRoute: AppFootwearIdRoute,
  AppFootwearIndexRoute: AppFootwearIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/about': typeof AppAboutRoute
  '/cart': typeof AppCartRoute
  '/checkout': typeof AppCheckoutRoute
  '/sell': typeof AppSellRoute
  '/': typeof AppIndexRoute
  '/footwear/$id': typeof AppFootwearIdRoute
  '/footwear': typeof AppFootwearIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/about': typeof AppAboutRoute
  '/cart': typeof AppCartRoute
  '/checkout': typeof AppCheckoutRoute
  '/sell': typeof AppSellRoute
  '/': typeof AppIndexRoute
  '/footwear/$id': typeof AppFootwearIdRoute
  '/footwear': typeof AppFootwearIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_app/about': typeof AppAboutRoute
  '/_app/cart': typeof AppCartRoute
  '/_app/checkout': typeof AppCheckoutRoute
  '/_app/sell': typeof AppSellRoute
  '/_app/': typeof AppIndexRoute
  '/_app/footwear/$id': typeof AppFootwearIdRoute
  '/_app/footwear/': typeof AppFootwearIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/about'
    | '/cart'
    | '/checkout'
    | '/sell'
    | '/'
    | '/footwear/$id'
    | '/footwear'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/about'
    | '/cart'
    | '/checkout'
    | '/sell'
    | '/'
    | '/footwear/$id'
    | '/footwear'
  id:
    | '__root__'
    | '/_app'
    | '/(auth)/login'
    | '/_app/about'
    | '/_app/cart'
    | '/_app/checkout'
    | '/_app/sell'
    | '/_app/'
    | '/_app/footwear/$id'
    | '/_app/footwear/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(auth)/login"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/about",
        "/_app/cart",
        "/_app/checkout",
        "/_app/sell",
        "/_app/",
        "/_app/footwear/$id",
        "/_app/footwear/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/cart": {
      "filePath": "_app/cart.tsx",
      "parent": "/_app"
    },
    "/_app/checkout": {
      "filePath": "_app/checkout.tsx",
      "parent": "/_app"
    },
    "/_app/sell": {
      "filePath": "_app/sell.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/footwear/$id": {
      "filePath": "_app/footwear/$id.tsx",
      "parent": "/_app"
    },
    "/_app/footwear/": {
      "filePath": "_app/footwear/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
