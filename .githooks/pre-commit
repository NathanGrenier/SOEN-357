#!/bin/sh
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

echo "üîç Running pre-commit hook..."

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Get the list of staged files
staged_files=$(git diff --cached --name-only --diff-filter=ACM)

# Filter staged files
files_to_check=$(echo "$staged_files" | grep -E '\.(ts|tsx|js|jsx|html|css)$' | tr '\n' ' ')

if [ -z "$files_to_check" ]; then
    echo "‚úÖ No lintable files staged for commit. Pre-commit hook passed successfully."
    exit 0
fi

npx eslint --config eslint.config.js $files_to_check
eslint_exit=$?
if [ $eslint_exit -ne 0 ]; then
  echo "‚ùå COMMIT REJECTED: ESLint exited with code $eslint_exit"
  exit 1
fi

# npx prettier --check $files_to_check --ignore-unknown --no-error-on-unmatched-pattern
# prettier_exit=$?
# if [ $prettier_exit -ne 0 ]; then
#     echo "‚ùå COMMIT REJECTED: Prettier exited with code $prettier_exit"
#     echo -e "\nYou can use 'npm run format' to automatically fix the formatting issues."
#     exit 1
# fi

echo "‚úÖ Pre-commit hook passed successfully."
exit 0